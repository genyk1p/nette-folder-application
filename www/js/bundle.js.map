{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://tetstnette/./node_modules/naja/dist/Naja.esm.js","webpack://tetstnette/./src/js/script.js"],"sourcesContent":["/*\n * Naja.js\n * 2.5.0\n *\n * by Jiří Pudil <https://jiripudil.cz>\n */\n// ready\nconst onDomReady = (callback) => {\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', callback);\n    }\n    else {\n        callback();\n    }\n};\n// assert\nclass AssertionError extends Error {\n}\nconst assert = (condition, description) => {\n    if (!condition) {\n        const message = `Assertion failed${description !== undefined ? `: ${description}` : '.'}`;\n        throw new AssertionError(message);\n    }\n};\n\nclass UIHandler extends EventTarget {\n    constructor(naja) {\n        super();\n        this.naja = naja;\n        this.selector = '.ajax';\n        this.allowedOrigins = [window.location.origin];\n        this.handler = this.handleUI.bind(this);\n        naja.addEventListener('init', this.initialize.bind(this));\n    }\n    initialize() {\n        onDomReady(() => this.bindUI(window.document.body));\n        this.naja.snippetHandler.addEventListener('afterUpdate', (event) => {\n            const { snippet } = event.detail;\n            this.bindUI(snippet);\n        });\n    }\n    bindUI(element) {\n        const selectors = [\n            `a${this.selector}`,\n            `input[type=\"submit\"]${this.selector}`,\n            `input[type=\"image\"]${this.selector}`,\n            `button[type=\"submit\"]${this.selector}`,\n            `form${this.selector} input[type=\"submit\"]`,\n            `form${this.selector} input[type=\"image\"]`,\n            `form${this.selector} button[type=\"submit\"]`,\n        ].join(', ');\n        const bindElement = (element) => {\n            element.removeEventListener('click', this.handler);\n            element.addEventListener('click', this.handler);\n        };\n        const elements = element.querySelectorAll(selectors);\n        for (let i = 0; i < elements.length; i++) {\n            bindElement(elements.item(i));\n        }\n        if (element.matches(selectors)) {\n            bindElement(element);\n        }\n        const bindForm = (form) => {\n            form.removeEventListener('submit', this.handler);\n            form.addEventListener('submit', this.handler);\n        };\n        if (element.matches(`form${this.selector}`)) {\n            bindForm(element);\n        }\n        const forms = element.querySelectorAll(`form${this.selector}`);\n        for (let i = 0; i < forms.length; i++) {\n            bindForm(forms.item(i));\n        }\n    }\n    handleUI(event) {\n        const mouseEvent = event;\n        if (mouseEvent.altKey || mouseEvent.ctrlKey || mouseEvent.shiftKey || mouseEvent.metaKey || mouseEvent.button) {\n            return;\n        }\n        const element = event.currentTarget;\n        const options = this.naja.prepareOptions();\n        const ignoreErrors = () => {\n            // don't reject the promise in case of an error as developers have no way of handling the rejection\n            // in this situation; errors should be handled in `naja.addEventListener('error', errorHandler)`\n        };\n        if (event.type === 'submit') {\n            this.submitForm(element, options, event).catch(ignoreErrors);\n        }\n        else if (event.type === 'click') {\n            this.clickElement(element, options, mouseEvent).catch(ignoreErrors);\n        }\n    }\n    async clickElement(element, options = {}, event) {\n        let method = 'GET', url = '', data;\n        if (!this.dispatchEvent(new CustomEvent('interaction', { cancelable: true, detail: { element, originalEvent: event, options } }))) {\n            event?.preventDefault();\n            return {};\n        }\n        if (element.tagName === 'A') {\n            assert(element instanceof HTMLAnchorElement);\n            method = 'GET';\n            url = element.href;\n            data = null;\n        }\n        else if (element.tagName === 'INPUT' || element.tagName === 'BUTTON') {\n            assert(element instanceof HTMLInputElement || element instanceof HTMLButtonElement);\n            const { form } = element;\n            // eslint-disable-next-line no-nested-ternary,no-extra-parens\n            method = element.getAttribute('formmethod')?.toUpperCase() ?? form?.getAttribute('method')?.toUpperCase() ?? 'GET';\n            url = element.getAttribute('formaction') ?? form?.getAttribute('action') ?? window.location.pathname + window.location.search;\n            data = new FormData(form ?? undefined);\n            if (element.type === 'submit' && element.name !== '') {\n                data.append(element.name, element.value || '');\n            }\n            else if (element.type === 'image') {\n                const coords = element.getBoundingClientRect();\n                const prefix = element.name !== '' ? `${element.name}.` : '';\n                data.append(`${prefix}x`, Math.max(0, Math.floor(event !== undefined ? event.pageX - coords.left : 0)));\n                data.append(`${prefix}y`, Math.max(0, Math.floor(event !== undefined ? event.pageY - coords.top : 0)));\n            }\n        }\n        if (!this.isUrlAllowed(url)) {\n            throw new Error(`Cannot dispatch async request, URL is not allowed: ${url}`);\n        }\n        event?.preventDefault();\n        return this.naja.makeRequest(method, url, data, options);\n    }\n    async submitForm(form, options = {}, event) {\n        if (!this.dispatchEvent(new CustomEvent('interaction', { cancelable: true, detail: { element: form, originalEvent: event, options } }))) {\n            event?.preventDefault();\n            return {};\n        }\n        const method = form.getAttribute('method')?.toUpperCase() ?? 'GET';\n        const url = form.getAttribute('action') ?? window.location.pathname + window.location.search;\n        const data = new FormData(form);\n        if (!this.isUrlAllowed(url)) {\n            throw new Error(`Cannot dispatch async request, URL is not allowed: ${url}`);\n        }\n        event?.preventDefault();\n        return this.naja.makeRequest(method, url, data, options);\n    }\n    isUrlAllowed(url) {\n        const urlObject = new URL(url, location.href);\n        // ignore non-URL URIs (javascript:, data:, mailto:, ...)\n        if (urlObject.origin === 'null') {\n            return false;\n        }\n        return this.allowedOrigins.includes(urlObject.origin);\n    }\n}\n\nclass FormsHandler {\n    constructor(naja) {\n        this.naja = naja;\n        naja.addEventListener('init', this.initialize.bind(this));\n        naja.uiHandler.addEventListener('interaction', this.processForm.bind(this));\n    }\n    initialize() {\n        onDomReady(() => this.initForms(window.document.body));\n        this.naja.snippetHandler.addEventListener('afterUpdate', (event) => {\n            const { snippet } = event.detail;\n            this.initForms(snippet);\n        });\n    }\n    initForms(element) {\n        const netteForms = this.netteForms || window.Nette;\n        if (netteForms) {\n            if (element.tagName === 'form') {\n                netteForms.initForm(element);\n            }\n            const forms = element.querySelectorAll('form');\n            for (let i = 0; i < forms.length; i++) {\n                netteForms.initForm(forms.item(i));\n            }\n        }\n    }\n    processForm(event) {\n        const { element, originalEvent } = event.detail;\n        const inputElement = element;\n        if (inputElement.form !== undefined && inputElement.form !== null) {\n            inputElement.form['nette-submittedBy'] = element;\n        }\n        const netteForms = this.netteForms || window.Nette;\n        if ((element.tagName === 'FORM' || element.form) && netteForms && !netteForms.validateForm(element)) {\n            if (originalEvent) {\n                originalEvent.stopImmediatePropagation();\n                originalEvent.preventDefault();\n            }\n            event.preventDefault();\n        }\n    }\n}\n\nclass RedirectHandler extends EventTarget {\n    constructor(naja) {\n        super();\n        this.naja = naja;\n        naja.uiHandler.addEventListener('interaction', (event) => {\n            const { element, options } = event.detail;\n            if (!element) {\n                return;\n            }\n            if (element.hasAttribute('data-naja-force-redirect') || element.form?.hasAttribute('data-naja-force-redirect')) {\n                const value = element.getAttribute('data-naja-force-redirect') ?? element.form?.getAttribute('data-naja-force-redirect');\n                options.forceRedirect = value !== 'off';\n            }\n        });\n        naja.addEventListener('success', (event) => {\n            const { payload, options } = event.detail;\n            if (payload.redirect) {\n                this.makeRedirect(payload.redirect, options.forceRedirect ?? false, options);\n                event.stopImmediatePropagation();\n            }\n        });\n        this.locationAdapter = {\n            assign: (url) => window.location.assign(url),\n        };\n    }\n    makeRedirect(url, force, options = {}) {\n        if (url instanceof URL) {\n            url = url.href;\n        }\n        let isHardRedirect = force || !this.naja.uiHandler.isUrlAllowed(url);\n        const canRedirect = this.dispatchEvent(new CustomEvent('redirect', {\n            cancelable: true,\n            detail: {\n                url,\n                isHardRedirect,\n                setHardRedirect(value) {\n                    isHardRedirect = !!value;\n                },\n                options,\n            },\n        }));\n        if (!canRedirect) {\n            return;\n        }\n        if (isHardRedirect) {\n            this.locationAdapter.assign(url);\n        }\n        else {\n            this.naja.makeRequest('GET', url, null, options);\n        }\n    }\n}\n\nclass SnippetHandler extends EventTarget {\n    constructor(naja) {\n        super();\n        this.naja = naja;\n        this.op = {\n            replace: (snippet, content) => {\n                snippet.innerHTML = content;\n            },\n            prepend: (snippet, content) => snippet.insertAdjacentHTML('afterbegin', content),\n            append: (snippet, content) => snippet.insertAdjacentHTML('beforeend', content),\n        };\n        naja.addEventListener('success', (event) => {\n            const { options, payload } = event.detail;\n            if (payload.snippets) {\n                this.updateSnippets(payload.snippets, false, options);\n            }\n        });\n    }\n    static findSnippets(predicate) {\n        const result = {};\n        const snippets = window.document.querySelectorAll('[id^=\"snippet-\"]');\n        for (let i = 0; i < snippets.length; i++) {\n            const snippet = snippets.item(i);\n            if (predicate?.(snippet) ?? true) {\n                result[snippet.id] = snippet.innerHTML;\n            }\n        }\n        return result;\n    }\n    updateSnippets(snippets, fromCache = false, options = {}) {\n        Object.keys(snippets).forEach((id) => {\n            const snippet = document.getElementById(id);\n            if (snippet) {\n                this.updateSnippet(snippet, snippets[id], fromCache, options);\n            }\n        });\n    }\n    updateSnippet(snippet, content, fromCache, options) {\n        let operation = this.op.replace;\n        if ((snippet.hasAttribute('data-naja-snippet-prepend') || snippet.hasAttribute('data-ajax-prepend')) && !fromCache) {\n            operation = this.op.prepend;\n        }\n        else if ((snippet.hasAttribute('data-naja-snippet-append') || snippet.hasAttribute('data-ajax-append')) && !fromCache) {\n            operation = this.op.append;\n        }\n        const canUpdate = this.dispatchEvent(new CustomEvent('beforeUpdate', {\n            cancelable: true,\n            detail: {\n                snippet,\n                content,\n                fromCache,\n                operation,\n                changeOperation(value) {\n                    operation = value;\n                },\n                options,\n            },\n        }));\n        if (!canUpdate) {\n            return;\n        }\n        if (snippet.tagName.toLowerCase() === 'title') {\n            document.title = content;\n        }\n        else {\n            operation(snippet, content);\n        }\n        this.dispatchEvent(new CustomEvent('afterUpdate', {\n            cancelable: true,\n            detail: {\n                snippet,\n                content,\n                fromCache,\n                operation,\n                options,\n            },\n        }));\n    }\n}\n\nclass HistoryHandler extends EventTarget {\n    constructor(naja) {\n        super();\n        this.naja = naja;\n        this.initialized = false;\n        this.popStateHandler = this.handlePopState.bind(this);\n        naja.addEventListener('init', this.initialize.bind(this));\n        naja.addEventListener('before', this.saveUrl.bind(this));\n        naja.addEventListener('before', this.replaceInitialState.bind(this));\n        naja.addEventListener('success', this.pushNewState.bind(this));\n        naja.uiHandler.addEventListener('interaction', this.configureMode.bind(this));\n        this.historyAdapter = {\n            replaceState: (state, title, url) => window.history.replaceState(state, title, url),\n            pushState: (state, title, url) => window.history.pushState(state, title, url),\n        };\n    }\n    set uiCache(value) {\n        console.warn('Naja: HistoryHandler.uiCache is deprecated, use options.snippetCache instead.');\n        this.naja.defaultOptions.snippetCache = value;\n    }\n    handlePopState(event) {\n        const { state } = event;\n        if (state?.source !== 'naja') {\n            return;\n        }\n        const options = this.naja.prepareOptions();\n        this.dispatchEvent(new CustomEvent('restoreState', { detail: { state, options } }));\n    }\n    initialize() {\n        window.addEventListener('popstate', this.popStateHandler);\n    }\n    saveUrl(event) {\n        const { url, options } = event.detail;\n        options.href ??= url;\n    }\n    replaceInitialState(event) {\n        const { options } = event.detail;\n        const mode = HistoryHandler.normalizeMode(options.history);\n        if (mode !== false && !this.initialized) {\n            onDomReady(() => this.historyAdapter.replaceState(this.buildState(window.location.href, options), window.document.title, window.location.href));\n            this.initialized = true;\n        }\n    }\n    configureMode(event) {\n        const { element, options } = event.detail;\n        // propagate mode to options\n        if (!element) {\n            return;\n        }\n        if (element.hasAttribute('data-naja-history') || element.form?.hasAttribute('data-naja-history')) {\n            const value = element.getAttribute('data-naja-history') ?? element.form?.getAttribute('data-naja-history');\n            options.history = HistoryHandler.normalizeMode(value);\n        }\n    }\n    static normalizeMode(mode) {\n        if (mode === 'off' || mode === false) {\n            return false;\n        }\n        else if (mode === 'replace') {\n            return 'replace';\n        }\n        return true;\n    }\n    pushNewState(event) {\n        const { payload, options } = event.detail;\n        const mode = HistoryHandler.normalizeMode(options.history);\n        if (mode === false) {\n            return;\n        }\n        if (payload.postGet && payload.url) {\n            options.href = payload.url;\n        }\n        const method = mode === 'replace' ? 'replaceState' : 'pushState';\n        this.historyAdapter[method](this.buildState(options.href, options), window.document.title, options.href);\n    }\n    buildState(href, options) {\n        const state = { source: 'naja', href };\n        this.dispatchEvent(new CustomEvent('buildState', { detail: { state, options } }));\n        return state;\n    }\n}\n\nclass SnippetCache extends EventTarget {\n    constructor(naja) {\n        super();\n        this.naja = naja;\n        this.storages = {\n            off: new OffCacheStorage(naja),\n            history: new HistoryCacheStorage(),\n            session: new SessionCacheStorage(),\n        };\n        naja.uiHandler.addEventListener('interaction', this.configureCache.bind(this));\n        naja.historyHandler.addEventListener('buildState', this.buildHistoryState.bind(this));\n        naja.historyHandler.addEventListener('restoreState', this.restoreHistoryState.bind(this));\n    }\n    resolveStorage(option) {\n        let storageType;\n        if (option === true || option === undefined) {\n            storageType = 'history';\n        }\n        else if (option === false) {\n            storageType = 'off';\n        }\n        else {\n            storageType = option;\n        }\n        return this.storages[storageType];\n    }\n    configureCache(event) {\n        const { element, options } = event.detail;\n        if (!element) {\n            return;\n        }\n        if (element.hasAttribute('data-naja-snippet-cache') || element.form?.hasAttribute('data-naja-snippet-cache')\n            || element.hasAttribute('data-naja-history-cache') || element.form?.hasAttribute('data-naja-history-cache')) {\n            const value = element.getAttribute('data-naja-snippet-cache')\n                ?? element.form?.getAttribute('data-naja-snippet-cache')\n                ?? element.getAttribute('data-naja-history-cache')\n                ?? element.form?.getAttribute('data-naja-history-cache');\n            options.snippetCache = value;\n        }\n    }\n    buildHistoryState(event) {\n        const { state, options } = event.detail;\n        if ('historyUiCache' in options) {\n            console.warn('Naja: options.historyUiCache is deprecated, use options.snippetCache instead.');\n            options.snippetCache = options.historyUiCache;\n        }\n        const snippets = SnippetHandler.findSnippets((snippet) => !snippet.hasAttribute('data-naja-history-nocache')\n            && !snippet.hasAttribute('data-history-nocache')\n            && (!snippet.hasAttribute('data-naja-snippet-cache')\n                || snippet.getAttribute('data-naja-snippet-cache') !== 'off'));\n        if (!this.dispatchEvent(new CustomEvent('store', { cancelable: true, detail: { snippets, state, options } }))) {\n            return;\n        }\n        const storage = this.resolveStorage(options.snippetCache);\n        state.snippets = {\n            storage: storage.type,\n            key: storage.store(snippets),\n        };\n    }\n    restoreHistoryState(event) {\n        const { state, options } = event.detail;\n        if (state.snippets === undefined) {\n            return;\n        }\n        options.snippetCache = state.snippets.storage;\n        if (!this.dispatchEvent(new CustomEvent('fetch', { cancelable: true, detail: { state, options } }))) {\n            return;\n        }\n        const storage = this.resolveStorage(options.snippetCache);\n        const snippets = storage.fetch(state.snippets.key, state, options);\n        if (snippets === null) {\n            return;\n        }\n        if (!this.dispatchEvent(new CustomEvent('restore', { cancelable: true, detail: { snippets, state, options } }))) {\n            return;\n        }\n        this.naja.snippetHandler.updateSnippets(snippets, true, options);\n        this.naja.scriptLoader.loadScripts(snippets);\n    }\n}\nclass OffCacheStorage {\n    constructor(naja) {\n        this.naja = naja;\n        this.type = 'off';\n    } // eslint-disable-line no-empty-function\n    store() {\n        return null;\n    }\n    fetch(key, state, options) {\n        this.naja.makeRequest('GET', state.href, null, {\n            ...options,\n            history: false,\n            snippetCache: false,\n        });\n        return null;\n    }\n}\nclass HistoryCacheStorage {\n    constructor() {\n        this.type = 'history';\n    }\n    store(data) {\n        return data;\n    }\n    fetch(key) {\n        return key;\n    }\n}\nclass SessionCacheStorage {\n    constructor() {\n        this.type = 'session';\n    }\n    store(data) {\n        const key = Math.random().toString(36).substring(2, 8);\n        window.sessionStorage.setItem(key, JSON.stringify(data));\n        return key;\n    }\n    fetch(key) {\n        const data = window.sessionStorage.getItem(key);\n        if (data === null) {\n            return null;\n        }\n        return JSON.parse(data);\n    }\n}\n\nclass ScriptLoader {\n    constructor(naja) {\n        this.loadedScripts = new Set();\n        naja.addEventListener('init', () => {\n            onDomReady(() => {\n                document.querySelectorAll('script[data-naja-script-id]').forEach((script) => {\n                    const scriptId = script.getAttribute('data-naja-script-id');\n                    if (scriptId !== null && scriptId !== '') {\n                        this.loadedScripts.add(scriptId);\n                    }\n                });\n            });\n            naja.addEventListener('success', (event) => {\n                const { payload } = event.detail;\n                if (payload.snippets) {\n                    this.loadScripts(payload.snippets);\n                }\n            });\n        });\n    }\n    loadScripts(snippets) {\n        Object.keys(snippets).forEach((id) => {\n            const content = snippets[id];\n            if (!/<script/i.test(content)) {\n                return;\n            }\n            const el = window.document.createElement('div');\n            el.innerHTML = content;\n            const scripts = el.querySelectorAll('script');\n            for (let i = 0; i < scripts.length; i++) {\n                const script = scripts.item(i);\n                const scriptId = script.getAttribute('data-naja-script-id');\n                if (scriptId !== null && scriptId !== '' && this.loadedScripts.has(scriptId)) {\n                    continue;\n                }\n                const scriptEl = window.document.createElement('script');\n                scriptEl.innerHTML = script.innerHTML;\n                if (script.hasAttributes()) {\n                    const attrs = script.attributes;\n                    for (let j = 0; j < attrs.length; j++) {\n                        const attrName = attrs[j].name;\n                        scriptEl.setAttribute(attrName, attrs[j].value);\n                    }\n                }\n                window.document.head.appendChild(scriptEl)\n                    .parentNode.removeChild(scriptEl);\n                if (scriptId !== null && scriptId !== '') {\n                    this.loadedScripts.add(scriptId);\n                }\n            }\n        });\n    }\n}\n\nclass Naja extends EventTarget {\n    constructor(uiHandler, redirectHandler, snippetHandler, formsHandler, historyHandler, snippetCache, scriptLoader) {\n        super();\n        this.VERSION = 2;\n        this.initialized = false;\n        this.extensions = [];\n        this.defaultOptions = {};\n        this.uiHandler = new (uiHandler ?? UIHandler)(this);\n        this.redirectHandler = new (redirectHandler ?? RedirectHandler)(this);\n        this.snippetHandler = new (snippetHandler ?? SnippetHandler)(this);\n        this.formsHandler = new (formsHandler ?? FormsHandler)(this);\n        this.historyHandler = new (historyHandler ?? HistoryHandler)(this);\n        this.snippetCache = new (snippetCache ?? SnippetCache)(this);\n        this.scriptLoader = new (scriptLoader ?? ScriptLoader)(this);\n    }\n    registerExtension(extension) {\n        if (this.initialized) {\n            extension.initialize(this);\n        }\n        this.extensions.push(extension);\n    }\n    initialize(defaultOptions = {}) {\n        if (this.initialized) {\n            throw new Error('Cannot initialize Naja, it is already initialized.');\n        }\n        this.defaultOptions = this.prepareOptions(defaultOptions);\n        this.extensions.forEach((extension) => extension.initialize(this));\n        this.dispatchEvent(new CustomEvent('init', { detail: { defaultOptions: this.defaultOptions } }));\n        this.initialized = true;\n    }\n    prepareOptions(options) {\n        return {\n            ...this.defaultOptions,\n            ...options,\n            fetch: {\n                ...this.defaultOptions.fetch,\n                ...options?.fetch,\n            },\n        };\n    }\n    async makeRequest(method, url, data = null, options = {}) {\n        // normalize url to instanceof URL\n        if (typeof url === 'string') {\n            url = new URL(url, location.href);\n        }\n        options = this.prepareOptions(options);\n        const headers = new Headers(options.fetch.headers || {});\n        const body = this.transformData(url, method, data);\n        const abortController = new AbortController();\n        const request = new Request(url.toString(), {\n            credentials: 'same-origin',\n            ...options.fetch,\n            method,\n            headers,\n            body,\n            signal: abortController.signal,\n        });\n        // impersonate XHR so that Nette can detect isAjax()\n        request.headers.set('X-Requested-With', 'XMLHttpRequest');\n        // hint the server that Naja expects response to be JSON\n        request.headers.set('Accept', 'application/json');\n        if (!this.dispatchEvent(new CustomEvent('before', { cancelable: true, detail: { request, method, url: url.toString(), data, options } }))) {\n            return {};\n        }\n        const promise = window.fetch(request);\n        this.dispatchEvent(new CustomEvent('start', { detail: { request, promise, abortController, options } }));\n        let response, payload;\n        try {\n            response = await promise;\n            if (!response.ok) {\n                throw new HttpError(response);\n            }\n            payload = await response.json();\n        }\n        catch (error) {\n            if (error.name === 'AbortError') {\n                this.dispatchEvent(new CustomEvent('abort', { detail: { request, error, options } }));\n                this.dispatchEvent(new CustomEvent('complete', { detail: { request, response, payload: undefined, error, options } }));\n                return {};\n            }\n            this.dispatchEvent(new CustomEvent('error', { detail: { request, response, error, options } }));\n            this.dispatchEvent(new CustomEvent('complete', { detail: { request, response, payload: undefined, error, options } }));\n            throw error;\n        }\n        this.dispatchEvent(new CustomEvent('payload', { detail: { request, response, payload, options } }));\n        this.dispatchEvent(new CustomEvent('success', { detail: { request, response, payload, options } }));\n        this.dispatchEvent(new CustomEvent('complete', { detail: { request, response, payload, error: undefined, options } }));\n        return payload;\n    }\n    appendToQueryString(searchParams, key, value) {\n        if (value === null || value === undefined) {\n            return;\n        }\n        if (Array.isArray(value) || Object.getPrototypeOf(value) === Object.prototype) {\n            for (const [subkey, subvalue] of Object.entries(value)) {\n                this.appendToQueryString(searchParams, `${key}[${subkey}]`, subvalue);\n            }\n        }\n        else {\n            searchParams.append(key, String(value));\n        }\n    }\n    transformData(url, method, data) {\n        const isGet = ['GET', 'HEAD'].includes(method.toUpperCase());\n        // sending a form via GET -> serialize FormData into URL and return empty request body\n        if (isGet && data instanceof FormData) {\n            for (const [key, value] of data) {\n                if (value !== null && value !== undefined) {\n                    url.searchParams.append(key, String(value));\n                }\n            }\n            return null;\n        }\n        // sending a POJO -> serialize it recursively into URLSearchParams\n        const isDataPojo = data !== null && Object.getPrototypeOf(data) === Object.prototype;\n        if (isDataPojo || Array.isArray(data)) {\n            // for GET requests, append values to URL and return empty request body\n            // otherwise build `new URLSearchParams()` to act as the request body\n            const transformedData = isGet ? url.searchParams : new URLSearchParams();\n            for (const [key, value] of Object.entries(data)) {\n                this.appendToQueryString(transformedData, key, value);\n            }\n            return isGet\n                ? null\n                : transformedData;\n        }\n        return data;\n    }\n}\nclass HttpError extends Error {\n    constructor(response) {\n        const message = `HTTP ${response.status}: ${response.statusText}`;\n        super(message);\n        this.name = this.constructor.name;\n        this.stack = new Error(message).stack;\n        this.response = response;\n    }\n}\n\nclass AbortExtension {\n    constructor() {\n        this.abortControllers = new Set();\n    }\n    initialize(naja) {\n        naja.uiHandler.addEventListener('interaction', this.checkAbortable.bind(this));\n        naja.addEventListener('init', this.onInitialize.bind(this));\n        naja.addEventListener('start', this.saveAbortController.bind(this));\n        naja.addEventListener('complete', this.removeAbortController.bind(this));\n    }\n    onInitialize() {\n        document.addEventListener('keydown', (event) => {\n            if (event.key === 'Escape' && !(event.ctrlKey || event.shiftKey || event.altKey || event.metaKey)) {\n                for (const controller of this.abortControllers) {\n                    controller.abort();\n                }\n                this.abortControllers.clear();\n            }\n        });\n    }\n    checkAbortable(event) {\n        const { element, options } = event.detail;\n        if (element.hasAttribute('data-naja-abort') || element.form?.hasAttribute('data-naja-abort')) {\n            options.abort = (element.getAttribute('data-naja-abort') ?? element.form?.getAttribute('data-naja-abort')) !== 'off';\n        }\n    }\n    saveAbortController(event) {\n        const { abortController, options } = event.detail;\n        if (options.abort !== false) {\n            this.abortControllers.add(abortController);\n            options.clearAbortExtension = () => this.abortControllers.delete(abortController);\n        }\n    }\n    removeAbortController(event) {\n        const { options } = event.detail;\n        if (options.abort !== false && !!options.clearAbortExtension) {\n            options.clearAbortExtension();\n        }\n    }\n}\n\nclass UniqueExtension {\n    constructor() {\n        this.abortControllers = new Map();\n    }\n    initialize(naja) {\n        naja.uiHandler.addEventListener('interaction', this.checkUniqueness.bind(this));\n        naja.addEventListener('start', this.abortPreviousRequest.bind(this));\n        naja.addEventListener('complete', this.clearRequest.bind(this));\n    }\n    checkUniqueness(event) {\n        const { element, options } = event.detail;\n        const unique = element.getAttribute('data-naja-unique') ?? element.form?.getAttribute('data-naja-unique');\n        options.unique = unique === 'off' ? false : unique ?? 'default';\n    }\n    abortPreviousRequest(event) {\n        const { abortController, options } = event.detail;\n        if (options.unique !== false) {\n            this.abortControllers.get(options.unique ?? 'default')?.abort();\n            this.abortControllers.set(options.unique ?? 'default', abortController);\n        }\n    }\n    clearRequest(event) {\n        const { request, options } = event.detail;\n        if (!request.signal.aborted && options.unique !== false) {\n            this.abortControllers.delete(options.unique ?? 'default');\n        }\n    }\n}\n\nconst naja = new Naja();\nnaja.registerExtension(new AbortExtension());\nnaja.registerExtension(new UniqueExtension());\n\nexport { HttpError, Naja, naja as default };\n//# sourceMappingURL=Naja.esm.js.map\n","\"use strict\";\r\nimport naja from 'naja';\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n\r\n    naja.initialize({\r\n        history: false\r\n    });\r\n\r\n        const form = document.getElementById('addForm');\r\n        const inputData = document.getElementById('add-form-input-data');\r\n        const hiddenInputPath = document.getElementById('add-form-path');\r\n        const postUrl = form.getAttribute('action');\r\n        const renameSubmitBtn = document.getElementById('rename-submit-btn');\r\n        const renameFormInputData = document.getElementById('rename-form-input-data');\r\n        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));\r\n        const renameModal = new bootstrap.Modal(document.getElementById('renameFormModal'));\r\n        const renameWarningModal = new bootstrap.Modal(document.getElementById('renameWarningModal'));\r\n        const renameWarninText = document.getElementById('renameWarningModal').querySelector('.modal-body');\r\n        const renameWarnBtn = document.getElementById('rename-warn-btn');\r\n        let folderNameFoDelete = '';\r\n        let folderNameFoRename = '';\r\n        let currentPath = 'baseFolder/';\r\n        let currentFolders = [];\r\n\r\n\r\n        // Sends a POST request from the form with the id \"addForm\" to the server via AJAX to add a folder.\r\n        const sendFormData = () => {\r\n            if (inputData.value !== \"\"){\r\n                naja.makeRequest(\"POST\", postUrl, new FormData(form))\r\n                    .then((payload) => {\r\n                        renderPath(currentPath);\r\n                        renderFolder(currentPath);\r\n                    });\r\n            }\r\n            inputData.value = \"\";\r\n        };\r\n\r\n        // Sending a DELETE request to delete a folder.\r\n        const sendDeleteRequest = (folderName) => {\r\n            const originalUrl = document.getElementById('getDeleteUrl').textContent;\r\n            const urlParts = originalUrl.split('?');\r\n            const baseUrl = urlParts[0];\r\n            const deleteUrl = `${baseUrl}?name=${folderName}&path=${currentPath}`;\r\n            naja.makeRequest(\"DELETE\", deleteUrl)\r\n                .then((payload) => {\r\n                    renderPath(currentPath);\r\n                    renderFolder(currentPath);\r\n                });\r\n            inputData.value = \"\";\r\n        };\r\n\r\n         // Sending data for folder renaming to the server using the PUT method.\r\n         const sendRenameFormmData = () => {\r\n            const renameFormInputData = document.getElementById('rename-form-input-data');\r\n            const originalUrl = document.getElementById('getRenameUrl').textContent;\r\n            const urlParts = originalUrl.split('?');\r\n            const baseUrl = urlParts[0];\r\n            const renameUrl = `${baseUrl}?newName=${renameFormInputData.value}&oldName=${folderNameFoRename}&path=${currentPath}`; \r\n            naja.makeRequest('PUT', renameUrl)\r\n                .then((payload) => {\r\n                    renderPath(currentPath);\r\n                    renderFolder(currentPath);\r\n                    renameModal.hide();\r\n                });\r\n            renameFormInputData.value = \"\";\r\n        };\r\n\r\n        // Attaches an event handler to the delete button in the modal window, which contains the folder deletion function and hides the modal window.\r\n        const deleteButton = document.getElementById(\"delet-btn\");\r\n        deleteButton.addEventListener('click', () => {\r\n            const folderName = folderNameFoDelete;\r\n            folderNameFoDelete = '';\r\n            deleteModal.hide();\r\n            sendDeleteRequest(folderName);\r\n            });\r\n\r\n        // Renders folders depending on the provided path.\r\n        const renderFolder = (path) => {\r\n            const getUrl = document.getElementById('getUrl').textContent;\r\n            const folderDiv = document.querySelector('.folders');\r\n            const url = window.location.origin + getUrl\r\n            const urlWithParams = new URL(url);\r\n            let foldersNames = [];\r\n            urlWithParams.searchParams.append('path', path);\r\n            naja.makeRequest('GET', urlWithParams.toString())\r\n                .then((payload) => {\r\n                    if (payload.snippets && payload.snippets.foldersName) {\r\n                        foldersNames = payload.snippets.foldersName;\r\n                        currentFolders = foldersNames;\r\n                        folderDiv.innerHTML = '';\r\n                        foldersNames.forEach(item => {\r\n                            folderDiv.innerHTML += `<div class=\"folder btn btn-primary btn-lg\" >\r\n                                                        ${item}\r\n                                                        <img class=\"trash_img\" src=\"img/red-trash-can-icon.svg\">\r\n                                                        <img class=\"rename_img\" src=\"img/rename-icon.svg\">   \r\n                                                    </div>`;\r\n                        })\r\n                    }\r\n                });\r\n        };\r\n\r\n        // Renders the path depending on the provided path.\r\n        const renderPath = (path) => {\r\n            const pathOl = document.getElementById(\"breadcrumb_path\");\r\n            const arrPath = path.split(\"/\").filter(Boolean);\r\n            pathOl.innerHTML = '';\r\n            let currentPath = '';\r\n            arrPath.forEach(folder => {\r\n                currentPath += folder + \"/\";\r\n                pathOl.innerHTML += `<li class=\"breadcrumb-item active\"><a href=${currentPath} class=\"folder_link\">${folder}</a></li>`;\r\n            });\r\n            pathOl.lastElementChild.classList.remove(\"active\");\r\n        }\r\n        \r\n        renderPath(currentPath);\r\n        renderFolder(currentPath);\r\n\r\n        // Event handler for the submission of the new folder creation form.\r\n        form.addEventListener('submit', function (e) {\r\n            hiddenInputPath.value = currentPath;\r\n            inputData.value = inputData.value.trim();\r\n            e.preventDefault();\r\n            sendFormData();\r\n        });\r\n\r\n        // Attaching an event handler to the \"Rename\" button in the modal window with the renaming form.\r\n        renameSubmitBtn.addEventListener('click', () => {\r\n            const enteredFolderName = renameFormInputData.value.trim();\r\n            if(enteredFolderName === \"\"){\r\n                renameFormInputData.classList.add(\"is-invalid\");\r\n            } else if(currentFolders.includes(enteredFolderName)){\r\n                renameModal.hide();\r\n                renameWarninText.innerHTML = `This directory already has a folder named <span class=\"fw-bold\">${enteredFolderName}</span>, when you click the \"rename\" button, the folder you want to rename will be deleted, and all its subfolders will be moved to the <span class=\"fw-bold\">${enteredFolderName}</span> folder`;\r\n                renameWarningModal.show();\r\n            } else {\r\n                sendRenameFormmData();\r\n            }\r\n        })\r\n\r\n        // Attaching an event handler to the button in the modal window with a warning that there is already a folder with the same name in our directory, which we want to rename our folder to.\r\n        renameWarnBtn.addEventListener('click', () => {\r\n            sendRenameFormmData();\r\n            renameWarningModal.hide();\r\n        })\r\n\r\n        // Event handler for the window that tracks clicks on folders, clicks on paths, and clicks on icons for delete, rename, and performs the necessary logic.\r\n        window.addEventListener('click', (e) => {\r\n            if(e.target && e.target.classList.contains(\"folder\") && !e.target.classList.contains(\"trash_img\") && !e.target.classList.contains(\"rename_img\")){\r\n                currentPath += e.target.textContent.trim() + '/';\r\n                renderPath(currentPath);\r\n                renderFolder(currentPath);\r\n            } else if(e.target && e.target.classList.contains(\"folder_link\") ){\r\n                e.preventDefault();\r\n                currentPath = e.target.getAttribute('href')\r\n                renderPath(currentPath);\r\n                renderFolder(currentPath);\r\n            } else if(e.target && e.target.classList.contains(\"trash_img\" )){\r\n                const folderName = e.target.parentElement.textContent.trim();\r\n                const spanInModal = document.getElementById('folder_name_in_span');\r\n                spanInModal.innerHTML = '\"' + folderName + '\"';\r\n                deleteModal.show();\r\n                folderNameFoDelete = folderName;\r\n            }else if(e.target && e.target.classList.contains(\"rename_img\" )){\r\n                renameFormInputData.classList.remove(\"is-invalid\");\r\n                renameFormInputData.value = '';\r\n                folderNameFoRename = e.target.parentElement.textContent.trim();\r\n                renameModal.show();\r\n            };\r\n          });\r\n});\r\n"],"names":["onDomReady","callback","document","readyState","addEventListener","AssertionError","Error","assert","condition","description","undefined","UIHandler","EventTarget","constructor","naja","super","this","selector","allowedOrigins","window","location","origin","handler","handleUI","bind","initialize","bindUI","body","snippetHandler","event","snippet","detail","element","selectors","join","bindElement","removeEventListener","elements","querySelectorAll","i","length","item","matches","bindForm","form","forms","mouseEvent","altKey","ctrlKey","shiftKey","metaKey","button","currentTarget","options","prepareOptions","ignoreErrors","type","submitForm","catch","clickElement","data","method","url","dispatchEvent","CustomEvent","cancelable","originalEvent","preventDefault","tagName","HTMLAnchorElement","href","HTMLInputElement","HTMLButtonElement","getAttribute","toUpperCase","pathname","search","FormData","name","append","value","coords","getBoundingClientRect","prefix","Math","max","floor","pageX","left","pageY","top","isUrlAllowed","makeRequest","urlObject","URL","includes","FormsHandler","uiHandler","processForm","initForms","netteForms","Nette","initForm","inputElement","validateForm","stopImmediatePropagation","RedirectHandler","hasAttribute","forceRedirect","payload","redirect","makeRedirect","locationAdapter","assign","force","isHardRedirect","setHardRedirect","SnippetHandler","op","replace","content","innerHTML","prepend","insertAdjacentHTML","snippets","updateSnippets","findSnippets","predicate","result","id","fromCache","Object","keys","forEach","getElementById","updateSnippet","operation","changeOperation","toLowerCase","title","HistoryHandler","initialized","popStateHandler","handlePopState","saveUrl","replaceInitialState","pushNewState","configureMode","historyAdapter","replaceState","state","history","pushState","uiCache","console","warn","defaultOptions","snippetCache","source","normalizeMode","buildState","mode","postGet","SnippetCache","storages","off","OffCacheStorage","HistoryCacheStorage","session","SessionCacheStorage","configureCache","historyHandler","buildHistoryState","restoreHistoryState","resolveStorage","option","storageType","historyUiCache","storage","key","store","fetch","scriptLoader","loadScripts","random","toString","substring","sessionStorage","setItem","JSON","stringify","getItem","parse","ScriptLoader","loadedScripts","Set","script","scriptId","add","test","el","createElement","scripts","has","scriptEl","hasAttributes","attrs","attributes","j","attrName","setAttribute","head","appendChild","parentNode","removeChild","Naja","redirectHandler","formsHandler","VERSION","extensions","registerExtension","extension","push","headers","Headers","transformData","abortController","AbortController","request","Request","credentials","signal","set","promise","response","ok","HttpError","json","error","appendToQueryString","searchParams","Array","isArray","getPrototypeOf","prototype","subkey","subvalue","entries","String","isGet","transformedData","URLSearchParams","message","status","statusText","stack","abortControllers","checkAbortable","onInitialize","saveAbortController","removeAbortController","controller","abort","clear","clearAbortExtension","delete","Map","checkUniqueness","abortPreviousRequest","clearRequest","unique","get","aborted","inputData","hiddenInputPath","postUrl","renameSubmitBtn","renameFormInputData","deleteModal","bootstrap","Modal","renameModal","renameWarningModal","renameWarninText","querySelector","renameWarnBtn","folderNameFoDelete","folderNameFoRename","currentPath","currentFolders","sendRenameFormmData","renameUrl","textContent","split","then","renderPath","renderFolder","hide","folderName","deleteUrl","sendDeleteRequest","path","getUrl","folderDiv","urlWithParams","foldersNames","foldersName","pathOl","arrPath","filter","Boolean","folder","lastElementChild","classList","remove","e","trim","enteredFolderName","show","target","contains","parentElement"],"sourceRoot":""}